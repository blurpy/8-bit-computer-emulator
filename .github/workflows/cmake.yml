name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  SDL2DIR: ${{github.workspace}}\sdl2-src

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
      # Don't cancel the other builds if one fails
      fail-fast: false
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.platform}}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies on Ubuntu
      run: sudo apt-get install libsdl2-dev
      if: matrix.platform == 'ubuntu-latest'

    - name: Install dependencies on macOS
      run: brew install sdl2
      if: matrix.platform == 'macos-latest'

    - name: Make directories on Windows
      run: mkdir ${{github.workspace}}\sdl2-src ${{github.workspace}}\sdl2-bin
      shell: cmd
      if: matrix.platform == 'windows-latest'

    - name: Install SDL2 on Windows
      uses: ./.github/actions/download-sdl2
      if: matrix.platform == 'windows-latest'
      with:
        version: 2.0.14
        sources_destination: ${{github.workspace}}\sdl2-src
        binaries_destination: ${{github.workspace}}\sdl2-bin

    - name: See contents of new directories on Windows
      run: dir ${{github.workspace}}\sdl2-src
      shell: cmd
      if: matrix.platform == 'windows-latest'

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

    - name: Archive binaries
      uses: actions/upload-artifact@v2
      with:
        name: 8-bit ${{matrix.platform}}
        path: |
          ${{github.workspace}}/build/src/8bit
          ${{github.workspace}}/build/src/Release/8bit.exe
